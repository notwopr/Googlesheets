//Create custom menu to run functions on demand
function onOpen(){
var ui = SpreadsheetApp.getUi()
.createMenu('Update Stock Data')
.addItem('Refresh Input Sheet','refreshInput')
.addItem('Import Latest Stock Prices','getQuote')
.addItem('Overall Gain/Loss','overallGL')
.addItem('Day to Day Change','dailyCR')
.addItem('Average DCR','avDCR')
.addToUi();
};

//GLOBAL DEFINITIONS
var activesheet = SpreadsheetApp.getActiveSpreadsheet();
var inputsheet = activesheet.getSheetByName('Inputs');
var pricesheet = activesheet.getSheetByName('Prices');
var inputlastcoord = [];
var tickercellcoord = [];
var tickerlistrange = "";
var tickerlist = "";
var tickerlistheader = "Ticker";
var dateCell = "'Inputs'!$B$5";
var pricelastcoord = [];



//FUNCTION LIBRARY



//Get last row and column
function getLast(target,xvar){
xvar.push(target.getLastRow());
xvar.push(target.getLastColumn());
};

//Clear sheet or else insert one
function clearInsert(target,shtname,index) {
if (target == null) {
activesheet.insertSheet(shtname,index);
} 
else {target.clear();};
};

//Search for Cell with given string
function searchCell(target,begr,begc,endr,endc,tickerstring,yvar){ 
//Define Search Range
var searcharray = target.getRange(begr,begc,endr,endc).getValues();
//Run Search
    for (var i = 0; i < endr; i++) {
      for (var j = 0; j < endc; j++) {
        if (searcharray[i][j] == tickerstring) {
        yvar.push(i + 1);
        yvar.push(j + 1);}; 
      }; 
    };
};

//Paste formula from one place to another
function pasteFormula(destination,formula) {
destination.setFormula(formula);
};

//Paste content from one place to another
function pasteValue(destination,content) {
destination.setValue(content);
};

//Google Finance query string creator
function googDate(datefield) {
return "DATE(YEAR(" + datefield + "),MONTH(" + datefield + "),DAY(" + datefield + "))";
};

function googQ(tickerName,dataType,startDate,endDate){
return "googlefinance(\"" + tickerName + "\",\"" + dataType + "\"," + googDate(startDate) + "," + googDate(endDate) + ")";
};

//Replace formulas with solutions to those values
function replaceForm(range){
range.copyTo(range, {contentsOnly:true});
};


//Update Stock Prices
function getQuote(){

//Clear Pricesheet or create one, and then define pricesheet
clearInsert(pricesheet,"Prices",2);
pricesheet = activesheet.getSheetByName('Prices');

//Header
tickerlistrange.copyTo(pricesheet.getRange(1,2),SpreadsheetApp.CopyPasteType.PASTE_VALUES,true);
//Prices
for (var k = 0; k < tickerlist.length; k++) {
var priceSearch = googQ(tickerlist[k],"close",dateCell,"TODAY()");
pasteFormula(pricesheet.getRange(2,k + 2),"=FILTER(INDEX(" + priceSearch + ",,2),INDEX(" + priceSearch + ",,2)<>\"Close\")");
};
//Date Column
var dateColumn = googQ(tickerlist[0],"close",dateCell,"TODAY()");
pasteFormula(pricesheet.getRange(2,1),"=FILTER(INDEX(" + dateColumn + ",0,1),INDEX(" + dateColumn + ",0,1)<>\"Date\")");

//Convert all data/formulas to hard values
pricelastcoord = [];
getLast(pricesheet,pricelastcoord);
replaceForm(pricesheet.getDataRange());

//Clear Formatting
pricesheet.clearFormats();

//Format Pricesheet
pricesheet.getRange(2,1,pricelastcoord[0],1).setNumberFormat("mm-dd-yyyy");
pricesheet.getRange(2,2,pricelastcoord[0],pricelastcoord[1]).setNumberFormat("$###,###,##0.00");
pricesheet.getRange(1,1,pricelastcoord[0],pricelastcoord[1]).setFontFamily("Roboto Mono");
pricesheet.getRange(1,1,pricelastcoord[0],pricelastcoord[1]).setFontSize("10");
pricesheet.getRange(1,1,pricelastcoord[0],pricelastcoord[1]).setFontWeight("Normal");
pricesheet.getRange(1,1,1,pricelastcoord[1]).setFontWeight("Bold");
pricesheet.getRange(1,1,pricelastcoord[0],1).setFontWeight("Bold");

//Autofit Columns
pricesheet.autoResizeColumns(1,pricelastcoord[1]);
};



//Update Statistical Analysis

//Overall Gain/loss from Purchase date to the column date
function overallGL(){

//Clear sheet, or Create One, and then define sheet
overallglsheet = activesheet.getSheetByName('OverallGL');
clearInsert(overallglsheet,"OverallGL",4);
overallglsheet = activesheet.getSheetByName('OverallGL');

//Copy Pricesheet Data
pricesheet = activesheet.getSheetByName('Prices');
var pricelastcoord = [];
getLast(pricesheet,pricelastcoord);
var pricesheetData = pricesheet.getDataRange();
pricesheetData.copyTo(overallglsheet.getRange(1,1), SpreadsheetApp.CopyPasteType.PASTE_VALUES,true);

//Calculate and Paste Percentage Change from purchase Date
var ogllastcoord = [];
getLast(overallglsheet,ogllastcoord);
var priceBoxRange = overallglsheet.getRange(2,3,ogllastcoord[0] - 1,ogllastcoord[1] - 2);
var priceBox = [];
priceBox = priceBoxRange.getValues();
var purchPriceCol = [];
purchPriceCol = overallglsheet.getRange(2,2,tickerlist.length,1).getValues();
for (var b = 0; b < tickerlist.length; b++){
for (var c = 0; c < ogllastcoord[1] - 2; c++){
overallglsheet.getRange(b + 2,c + 3).setValue((priceBox[b][c] - purchPriceCol[b])/purchPriceCol[b]);
};
};

//Fill Average Row
overallglsheet.getRange(tickerlist.length + 2,2,1,1).setValue("Average");
overallglsheet.getRange(tickerlist.length + 2,3,1,ogllastcoord[1] - 2).setFormula("=AVERAGE(C2:C71)");

//Convert all data to hard values
replaceForm(overallglsheet.getDataRange());

//Clear Formatting
overallglsheet.clearFormats();
//Format
overallglsheet.getRange(1,2,1,ogllastcoord[1] - 1).setNumberFormat("mm-dd-yyyy");
overallglsheet.getRange(2,2,tickerlist.length,1).setNumberFormat("$###,###,##0.00");
priceBoxRange.setNumberFormat("###,###,##0.00%");
overallglsheet.getRange(tickerlist.length + 2,3,1,ogllastcoord[1] - 2).setNumberFormat("###,###,##0.00%");
overallglsheet.getRange(1,1,ogllastcoord[0] + 1,ogllastcoord[1]).setFontFamily("Roboto Mono");
overallglsheet.getRange(1,1,ogllastcoord[0] + 1,ogllastcoord[1]).setFontSize("10");
overallglsheet.getRange(1,1,ogllastcoord[0] + 1,ogllastcoord[1]).setFontWeight("Normal");
overallglsheet.getRange(1,2,1,ogllastcoord[1] - 1).setFontWeight("Bold");
overallglsheet.getRange(tickerlist.length + 2,2,1,ogllastcoord[1] - 1).setFontWeight("Bold");
};


function dailyCR() {customCalc('dailycr','Day to Day Change','dcrlastcoord');};

function customCalc(sheetvar,shtname,lastcoordvar){

//Clear sheet, or Create One, and then define sheet
sheetvar = activesheet.getSheetByName(shtname);
clearInsert(sheetvar,shtname,4);
sheetvar = activesheet.getSheetByName(shtname);

//Get Latest Prices and Paste to new sheet
var pricesheetData = pricesheet.getDataRange();
pricesheetData.copyTo(sheetvar.getRange(1,1), SpreadsheetApp.CopyPasteType.PASTE_VALUES,true);

//Custom Formula
var lastcoordvar = [];
getLast(sheetvar,lastcoordvar);
var pasteRange = sheetvar.getRange(2,2,lastcoordvar[0] - 1,lastcoordvar[1] - 1).getValues();
for (var b = 0; b < tickerlist.length; b++){
for (var c = 0; c < lastcoordvar[1] - 2; c++){
sheetvar.getRange(b + 2,c + 3).setValue((pasteRange[b][c + 1] - pasteRange[b][c])/pasteRange[b][c]);
};
rowArr = sheetvar.getRange(b + 2,3,1,lastcoordvar[1] - 2).getValues();
sumrowArr = rowArr[0].reduce(function(sumtotal,currentValue){return sumtotal + currentValue});
avofrow = sumrowArr/rowArr[0].length;
pasteValue(sheetvar.getRange(b + 2,lastcoordvar[1] + 1,1,1),avofrow);
};

sheetvar.getRange(1,lastcoordvar[1] + 1,1,1).setValue("Average");

//Fill Average Row
sheetvar.getRange(tickerlist.length + 2,2,1,1).setValue("Average");
sheetvar.getRange(tickerlist.length + 2,3,1,lastcoordvar[1] - 1).setFormula("=AVERAGE(C2:C" + tickerlist.length + ")");

//Convert all data to hard values
replaceForm(sheetvar.getDataRange());

//Clear Formatting
sheetvar.clearFormats();
//Format
sheetvar.getRange(1,2,1,lastcoordvar[1] - 1).setNumberFormat("mm-dd-yyyy");
sheetvar.getRange(2,2,tickerlist.length,1).setNumberFormat("$###,###,##0.00");
sheetvar.getRange(2,3,lastcoordvar[0] - 1,lastcoordvar[1] - 1).setNumberFormat("###,###,##0.00%");
sheetvar.getRange(tickerlist.length + 2,3,1,lastcoordvar[1] - 1).setNumberFormat("###,###,##0.00%");
sheetvar.getRange(1,1,lastcoordvar[0] + 1,lastcoordvar[1] + 1).setFontFamily("Roboto Mono");
sheetvar.getRange(1,1,lastcoordvar[0] + 1,lastcoordvar[1] + 1).setFontSize("10");
sheetvar.getRange(1,1,lastcoordvar[0] + 1,lastcoordvar[1] + 1).setFontWeight("Normal");
sheetvar.getRange(1,2,1,lastcoordvar[1]).setFontWeight("Bold");
sheetvar.getRange(tickerlist.length + 2,2,1,lastcoordvar[1]).setFontWeight("Bold");
};



function avDCR() {customCalc2('avdcr','Average DCR','avdcrlastcoord');};
function customCalc2(sheetvar,shtname,lastcoordvar){

//Clear sheet, or Create One, and then define sheet
sheetvar = activesheet.getSheetByName(shtname);
clearInsert(sheetvar,shtname,4);
sheetvar = activesheet.getSheetByName(shtname);


//Get Tickerlist column and paste
var dailycr = activesheet.getSheetByName('Day to Day Change');
var dcrlastcoord = [];
getLast(dailycr,dcrlastcoord);
var tickerlistcol = dailycr.getRange(2,1,tickerlist.length,1);
tickerlistcol.copyTo(sheetvar.getRange(2,1), SpreadsheetApp.CopyPasteType.PASTE_VALUES,false);
//Get Latest Daily Change Rates and store data
var dcrData = dailycr.getRange(2,3,tickerlist.length,dcrlastcoord[1] - 3).getValues();

//Average over specified time span
var numDays = 66;
for (var w = 0; w < tickerlist.length; w++){
arrRow = 0;
arrRow = dcrData[w];
for (var v = 0; v < dcrData[0].length - numDays + 1; v++){
arrSamp = 0;
arrSamp = arrRow.slice(0 + v,numDays + v);
sumarrSamp = 0;
sumarrSamp = arrSamp.reduce(function(sumtotal,currentValue){return sumtotal + currentValue});
avofSamp = 0;
avofSamp = sumarrSamp/arrSamp.length;
pasteValue(sheetvar.getRange(2 + w,2 + v,1,1),avofSamp);
};
};

//Convert all data to hard values
replaceForm(sheetvar.getDataRange());

sheetvar.insertRows(1,1);
pasteValue(sheetvar.getRange(1,1,1,1),"Total number of days worth of data retrieved: " + dcrData[0].length);
sheetvar.insertRows(1,1);
pasteValue(sheetvar.getRange(1,1,1,1),"Timespan for calculating average: " + numDays + " Days");

//Sample Numbering
var lastcoordvar = [];
getLast(sheetvar,lastcoordvar);
for (var x = 0; x < lastcoordvar[1] - 1; x++) {pasteValue(sheetvar.getRange(3,2 + x,1,1),x + 1);};


//Format
sheetvar.clearFormats();
sheetvar.getRange(4,2,lastcoordvar[0] - 1,lastcoordvar[1] - 1).setNumberFormat("###,###,##0.00%");
sheetvar.getRange(1,1,lastcoordvar[0] + 1,lastcoordvar[1]).setFontFamily("Roboto Mono");
sheetvar.getRange(1,1,lastcoordvar[0] + 1,lastcoordvar[1]).setFontSize("10");
sheetvar.getRange(1,1,lastcoordvar[0] + 1,lastcoordvar[1]).setFontWeight("Normal");
sheetvar.getRange(3,2,1,lastcoordvar[1] - 1).setFontWeight("Bold");
};

function refreshInput() {
inputlastcoord = [];
getLast(inputsheet,inputlastcoord);
//Get Tickerlist
tickercellcoord = [];
searchCell(inputsheet,1,1,inputlastcoord[0],inputlastcoord[1],tickerlistheader,tickercellcoord);
tickerlistrange = inputsheet.getRange(tickercellcoord[0] + 1,tickercellcoord[1],inputlastcoord[0]-2);
tickerlist = tickerlistrange.getValues();

for (var q = 0; q < tickerlist.length; q++) {
//Tickerlist Numbering
pasteValue(inputsheet.getRange(tickercellcoord[0] + q + 1,tickercellcoord[1] - 1),q + 1);
//Full Name
pasteFormula(inputsheet.getRange(tickercellcoord[0] + q + 1,tickercellcoord[1] + 1),"=googlefinance(E3:E,\"name\")");
};

//Ticker with numbering
tickerlistrangeNum = inputsheet.getRange(tickercellcoord[0] + 1,tickercellcoord[1] - 1,inputlastcoord[0]-2);
tickerlistNum = tickerlistrangeNum.getValues();

//Clear Formatting
inputsheet.clearFormats();

//Format
inputsheet.getRange(1,1,inputlastcoord[0],inputlastcoord[1]).setFontFamily("Roboto Mono");
inputsheet.getRange(1,1,inputlastcoord[0],inputlastcoord[1]).setFontSize("10");
inputsheet.getRange(1,1,inputlastcoord[0],inputlastcoord[1]).setFontWeight("Normal");
inputsheet.getRange(tickercellcoord[0] + 1,tickercellcoord[1] - 1,tickerlist.length,1).setNumberFormat("##");
};



//EXECUTE BELOW
refreshInput();

